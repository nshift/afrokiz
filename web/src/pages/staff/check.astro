---
import Layout from "../../layouts/Layout.astro";
import Card from "../../components/Card.astro";
import { PaymentAPI } from "../../payment-api/payment.api";

const queryParams = Astro.url.searchParams
const orderId = queryParams.get('order_id')
const authToken = Astro.cookies.get('STAFF_AUTH_TOKEN')?.value ?? ''
const authorized = !(!orderId || !authToken || authToken != 'ab65bb3c-80e5-463b-8097-57bd0593da43')
if (!orderId || !authorized) {
  return Astro.redirect('/staff/unauthorized')
}
const requestToCheckedIn = queryParams.get('check_in') == "1"
const paymentApi = new PaymentAPI()
if (requestToCheckedIn) {
  await paymentApi.checkIn(orderId)
}
const order = await paymentApi.getOrderById(orderId)
const checkedIn = order.checkedIn
const includedItems = order.items.flatMap((item) => item.includes)

function getNumber(pattern: string) {
  return includedItems.filter((option) => option.includes(pattern)).map((option) => Number(option.match(new RegExp('(\\d+)' + pattern))?.[1] ?? '0')).reduce((a, b) => a+b, 0)
}

const items = [
  { icon: '', title: 'Heneco MC', value: (includedItems.includes('2H Masterclass by Heneco') || includedItems.includes('2H Heneco Masterclass') || includedItems.includes('2H Said & Oksana Masterclass and 2H Heneco Masterclass')) ? 1 : 0 },
  { icon: '', title: 'Said MC', value: (includedItems.includes('2H Masterclass by Said & Oksana') || includedItems.includes('2H Said & Oksana Masterclass') || includedItems.includes('2H Said & Oksana Masterclass and 2H Heneco Masterclass')) ? 1 : 0 },
  { icon: 'fa-ship', title: 'Cruise', value: (includedItems.includes('Exclusive Dinner Cruise Party') || includedItems.includes('Exclusive Dinner Cruise Party (7th September 6:30PM-9:30PM)')) ? 1 : 0 },
  { icon: '', title: 'Ginga', value: includedItems.includes('2H Ginga Styling bootcamp (video recorded)') ? 1 : 0 },
  { icon: 'fa-spa', title: 'Massage', value: getNumber('H Foot Massage') },
  { icon: 'fa-martini-glass', title: 'Welcome drinks', value: getNumber(' welcome drinks') },
]

function getPassColorClass(passId: string) {
  return (
    {
      'vip-silver': 'silver',
      'vip-gold': 'gold',
    }[passId] ?? 'purple'
  )
}

function getPassName(passId: string) {
  return (
    {
      party: 'Party Pass',
      'party-bundle': 'Party Combo Pass',
      fullpass: 'Full Pass',
      'fullpass-bundle': 'Full Pass + Masterclass',
      heneco: 'Heneco Full Pass',
      said: 'Said Full Pass',
      'vip-silver': 'VIP Silver Pass',
      'vip-gold': 'VIP Gold Pass',
      'fri-sat': 'Friday & Saturday Pass',
      'sat-sun': 'Saturday & Sunday Pass',
      fri: 'Friday Pass',
      sat: 'Saturday Pass',
      sun: 'Sunday Pass',
    }[passId] ?? passId.replace('-', ' ') + ' Pass'
  )
}
---

<Layout title=`Order ${order.id} | Afrokiz Bkk Festival Edition 2``>
  <main>
    <div class="grid">
      <div class="list">
        <Card classes={["ticket-card", getPassColorClass(order.items[0].id)]}>
          <div class="lines">
            <h1>{order.fullname}</h1>
            <p style="text-transform: capitalize"><b>{getPassName(order.items[0].id)}</b></p>
            <p>{order.email}</p>
            <p><a target="_blank" href=`/order?order_id=${order.id}`>{order.id}</a></p>
          </div>
        </Card>
        <Card classes={["ticket-card", "check-in", checkedIn ? "green" : "blue"]}>
          {checkedIn ? 
              <i class="large-icon fa-solid fa-check"></i>
              <p>Checked In</p>
            : <a href=`/staff/check?order_id=${order.id}&check_in=1`>
              <i class="large-icon fa-solid fa-check"></i>
              <p>Check In</p>
            </a>}
        </Card>
        {
          items.map((item) => 
            <Card classes={["ticket-card"]}>
              <div class="list2">
                <p class="value">{item.value}</p>
                <div class="lines">
                  <i class:list={['icon', 'fa-solid', item.icon]}></i>
                  <p>{item.title}</p>
                </div>
              </div>
            </Card>
          )
        }
      </div>
    </div>
  </main>
</Layout>

<style is:global>
  .ticket-card {
    width: calc((100% / 2) - 0.8rem) !important;
    min-height: 175px !important;
  }
  .ticket-card .text {
    width: 100%;
    padding: 2rem;
    word-break: break-word;
  }
  .check-in.green {
    background-color: #39c440;
  }
  .check-in.green a {
    color: white;
    text-decoration: none;
  }
  .check-in.blue {
    background-color: #3b79ff;
  }
  .check-in.blue a {
    color: white;
    text-decoration: none;
  }
  .gold {
    background-color: #ed9e00 !important;
    color: black !important;
  }
  .gold a, .silver a {
    color: black !important;
  }
  .silver {
    background-color: #808080 !important;
    color: black !important;
  }
  .purple {
    background-color: var(--primary-darker-color) !important;
    color: white !important;
  }
  .purple a {
    color: white !important;
  }
</style>

<style>
  main {
    margin-top: 1rem;
    font-size: 120%;
  }
  .grid {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-gap: var(--grid-lg-gap);
    padding: 0 var(--grid-side-padding);
  }
  .list {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1rem;
    grid-column: span 12;
    justify-content: center;
    align-items: stretch;
    text-align: center;
  }
  .list2 {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    text-align: center;
  }
  .list2 > * {
    flex: 1;
  }
  .lines {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
    align-items: center;
  }
  .icon {
    font-size: 2rem;
  }

  .large-icon {
    font-size: 3rem;
  }
  .value {
    font-size: 4rem;
    font-weight: bold;
  }
</style>